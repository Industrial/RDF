// Generated by LiveScript 1.3.1
var config, LevelgraphServer, LevelgraphRPCServer, log, debug, levelgraphConfig, levelgraphServer, levelgraphRpcConfig, levelgraphRpcServer, out$ = typeof exports != 'undefined' && exports || this;
config = require("../../config");
LevelgraphServer = require("./LevelgraphServer");
LevelgraphRPCServer = require("./LevelgraphRPCServer");
log = require("id-debug");
debug = log.debug;
out$.levelgraphConfig = levelgraphConfig = config.server.multilevel.levelgraph;
out$.levelgraphServer = levelgraphServer = new LevelgraphServer(config.server.multilevel.levelgraph);
out$.levelgraphRpcConfig = levelgraphRpcConfig = config.server.multilevel.levelgraphRpc;
levelgraphRpcConfig['interface'] = {
  approximateSize: bind$(levelgraphServer.multilevelDatabase, 'approximateSize'),
  delStream: bind$(levelgraphServer.multilevelDatabase, 'delStream'),
  del: bind$(levelgraphServer.multilevelDatabase, 'del'),
  generateBatch: bind$(levelgraphServer.multilevelDatabase, 'generateBatch'),
  getStream: bind$(levelgraphServer.multilevelDatabase, 'getStream'),
  get: bind$(levelgraphServer.multilevelDatabase, 'get'),
  jsonld: {
    del: bind$(levelgraphServer.multilevelDatabase.jsonld, 'del'),
    get: bind$(levelgraphServer.multilevelDatabase.jsonld, 'get'),
    options: bind$(levelgraphServer.multilevelDatabase.jsonld, 'options'),
    put: bind$(levelgraphServer.multilevelDatabase.jsonld, 'put')
  },
  n3: {
    getStream: bind$(levelgraphServer.multilevelDatabase.n3, 'put'),
    get: bind$(levelgraphServer.multilevelDatabase.n3, 'put'),
    putStream: bind$(levelgraphServer.multilevelDatabase.n3, 'put'),
    put: bind$(levelgraphServer.multilevelDatabase.n3, 'put')
  },
  nav: bind$(levelgraphServer.multilevelDatabase, 'nav'),
  putStream: bind$(levelgraphServer.multilevelDatabase, 'putStream'),
  put: bind$(levelgraphServer.multilevelDatabase, 'put'),
  searchStream: bind$(levelgraphServer.multilevelDatabase, 'searchStream'),
  search: bind$(levelgraphServer.multilevelDatabase, 'search'),
  v: bind$(levelgraphServer.multilevelDatabase, 'v')
};
out$.levelgraphRpcServer = levelgraphRpcServer = new LevelgraphRPCServer(levelgraphRpcConfig);
function bind$(obj, key, target){
  return function(){ return (target || obj)[key].apply(obj, arguments) };
}